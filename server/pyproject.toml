[tool.black]
line-length = 100
skip-string-normalization = true
exclude = '\.eggs|\.git|\.mypy_cache|\.tox|\.env|\.venv|env|venv|_build|buck-out|build|dist'

[tool.isort]
profile = "black"
line_length = 100
# Sort by name, don't cluster "from" vs "import"
force_sort_within_sections = true
# Combines "as" imports on the same line
combine_as_imports = true

[tool.mypy]
python_version = 3.11
ignore_missing_imports = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
exclude = '\.eggs|\.git|\.mypy_cache|\.tox|\.env|\.venv|env|venv|_build|buck-out|build|dist'

[tool.poetry]
name = "dive_server"
version = "1.0.0"
description = "DIVE Data Server"
authors = ["Kitware, Inc. <viame-web@kitware.com>"]
license = "Apache 2.0"
include = ["**/*.mako"]
readme = "README.md"
keywords = ["DIVE", "VIAME", "Annotation", "Computer Vision", "Marine"]
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.11",
]
packages = [
  { include = "bucket_notifications" },
  { include = "dive_server" },
  { include = "dive_tasks" },
  { include = "dive_utils" },
  { include = "rabbitmq_user_queues" },
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
cheroot = ">=8.4.5"
click = "^8.1.3"
girder = ">=3.2.3"
girder_jobs = ">=3.2.3"
girder_worker = ">=0.10.3"
girder_worker_utils = ">=0.9.0"
pydantic = "1.10.13"
pyrabbit2 = "1.0.7"
typing-extensions = "^4.2.0"
GPUtil = "^1.4.0"
requests = ">=2.27.1"
urllib3 = "<1.27"
bitarray = "^2.9.2"
simplejpeg = "^1.7.2"
girder-large-image = "^1.28.1"
cherrypy = "^18.9.0"
large-image-tasks = { version = "^1.28.1", optional = true }
large-image-converter =  { version = "^1.28.1", optional = true }
large-image-source-pil =  { version = "^1.28.1", optional = true }
large-image-source-tiff =  { version = "^1.28.1", optional = true }
large-image-source-gdal =  { version = "^1.28.1", optional = true }
large-image =  { version = "^1.28.1", optional = true }
large-image-source-ometiff =  { version = "^1.28.1", optional = true }
large-image-source-openjpeg =  { version = "^1.28.1", optional = true }
numpy = "1.24.4"
gdal = {url = "https://github.com/girder/large_image_wheels/raw/wheelhouse/GDAL-3.6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", optional = true}
pylibtiff = {url = "https://github.com/girder/large_image_wheels/raw/wheelhouse/pylibtiff-0.6.1.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", optional = true}
pyvips = {url = "https://github.com/girder/large_image_wheels/raw/wheelhouse/pyvips-2.2.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl"}

[tool.poetry.group.dev.dependencies]
opencv-python = "^4.5.5"
tox = "^3.25.0"
[tool.poetry.extras]
large-image = [
  "girder-large-image",
  "large-image",
  "large-image-tasks",
  "large-image-converter",
  "large-image-source-pil",
  "large-image-source-gdal",
  "large-image-source-tiff",
  "large-image-source-ometiff",
  "large-image-source-openjpeg",
  "gdal",
  "numpy",
]

[build-system]
requires = ["poetry-core", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
diveutils = "scripts.entrypoint_dev:cli"
dive = "scripts.entrypoint_main:cli"


[tool.poetry.plugins."girder.plugin"]
dive_server = "dive_server:GirderPlugin"
bucket_notifications = "bucket_notifications:GirderPlugin"
rabbit_user_queues = "rabbitmq_user_queues:GirderPlugin"

[tool.poetry.plugins."girder_worker_plugins"]
dive_tasks = "dive_tasks:DIVEPlugin"

